{% import '@SyliusAdmin/Common/Macro/money.html.twig' as money %}

{% for item in order.items %}
    {% set variant = item.variant %}
    {% set product = variant.product %}
    <tr class="unit">
        <td class="single line">
            {% include '@SyliusAdmin/Product/_info.html.twig' %}
        </td>
        <td class="right aligned total">
            <span class="unit-total">{{ money.format(item.total, order.currencyCode) }}</span>
            {% set refundedTotal = unit_refunded_total(item.id, constant('App\\Entity\\Refund\\RefundType::ORDER_ITEM')) %}
            {% if refundedTotal != 0 %}
                <br/>
                <strong>{{ 'sylius_refund.ui.refunded'|trans }}:</strong>
                <span class="unit-refunded-total">{{ money.format(refundedTotal, order.currencyCode) }}</span>
            {% endif %}
        </td>
        <td class="aligned collapsing partial-refund">
            {% set inputName = "sylius_refund_items["~item.id~"][amount]" %}
            {% set hiddenInputName = "sylius_refund_items["~item.id~"][partial-id]" %}

            <div class="ui labeled input">
                <div class="ui label">{{ order.currencyCode|sylius_currency_symbol }}</div>
                <input data-refund-input type="number" step="0.01" name="{{ inputName }}" {% if not can_unit_be_refunded(item.id, constant('App\\Entity\\Refund\\RefundType::ORDER_ITEM')) %} disabled{% endif %}/>
            </div>
        </td>
        <td class="aligned collapsing">
            <button data-refund="{{ unit_refund_left(item.id, constant('App\\Entity\\Refund\\RefundType::ORDER_ITEM'), item.total) }}" type="button" class="ui button primary" {% if not can_unit_be_refunded(item.id, constant('App\\Entity\\Refund\\RefundType::ORDER_ITEM')) %}disabled{% endif %}>
                {{ 'sylius_refund.ui.refund'|trans }}
            </button>
        </td>
    </tr>
{% endfor %}
